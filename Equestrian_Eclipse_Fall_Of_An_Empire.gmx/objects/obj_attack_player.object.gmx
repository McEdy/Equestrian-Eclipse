<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(other)
{
    hp -= other.status_effect_damage;

    if(hp &lt;= 0)
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_fluttertree">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage

hit_angle = point_direction(origin_x, origin_y, other.phy_position_x, other.phy_position_y);
hit_dx = lengthdir_x(force, hit_angle);
hit_dy= -lengthdir_y(force, hit_angle);

with(instance_create(x, y, obj_damage_popup))
{
    damage_popup = other.damage;
    character = obj_fluttertree.id;
    colour = c_orange;
}

with(other)
{
    hp -= other.damage
    physics_apply_impulse(x, y, other.hit_dx, other.hit_dy);

    if(hp &lt;= 0){
        instance_destroy();
        global.boss_defeated = true;
        global.message1 = "You defeated Fluttertree. Congratulations!";
        global.message2 = true;
        
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_base">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hit_angle = point_direction(origin_x, origin_y, other.phy_position_x, other.phy_position_y);
hit_dx = lengthdir_x(force, hit_angle);
hit_dy = -lengthdir_y(force, hit_angle);

with(instance_create(x, y, obj_damage_popup))
{
    damage_popup = other.damage;
    character = instance_nearest(x, y, obj_enemy_base);
    colour = c_orange;
}

with(other)
{
    hp -= other.damage;
    physics_apply_impulse(x, y, other.hit_dx, other.hit_dy);

    if(hp &lt;= 0)
    {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle status effect type &amp; begin alarm loop

//No status effect

if(status_effect_0 = true)
{
show_debug_message("No status effect.");
}

//Status effect type 1

if(status_effect_1 = true)
{
    with(other)
    alarm[2] = 60;
    counter = 1;
    show_debug_message("alarm has been activated")
}

//Status effect type 2

if(status_effect_2 = true)
{
    with(other)
    alarm[3] = 60;
    counter = 1;
    show_debug_message("alarm has been activated")
}

//Status effect type 3

if(status_effect_3 = true)
{
    with(other)
    alarm[4] = 60;
    counter = 1;
    show_debug_message("alarm has been activated")
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_collision">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
