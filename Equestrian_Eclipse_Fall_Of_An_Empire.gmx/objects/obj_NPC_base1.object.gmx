<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_interactable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

var hasquest = false;
quest_started = false;
quest_assigned = false;
search_quest = "";
search_item = "";
character = noone;
var_e_pressed = false;

my_target = instance_create(x,y,obj_pathguide);
my_path = -1;

phy_fixed_rotation = true;
npc_base_prepare = false;   //If E was pressed -&gt; check if released

speech_active_counter = 0;

msg_pony = 0;
msg_conv = 0;
msg_case = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Depth

depth = y * -1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Quest system 2.0

var dist = point_distance(obj_player.phy_position_x, obj_player.phy_position_y,phy_position_x,phy_position_y);

if(dist &lt; 50)
{
if(var_e_pressed == true)
{
if(keyboard_check_released(ord("E")))
{
if(obj_player.text_loop == 0)
{
    var_e_pressed = false;
    
    if(hasquest == true)
    {
        var q_runs = 0; 
        var q_search = "";                          //Look if quest assigned already
        while(q_search != quest_name &amp;&amp; q_runs &lt; 1) //Runs = 1
        {
            q_search = global.quests[q_runs,0];
            q_runs += 1;
            show_debug_message("Search quests run " + string(q_runs) + ".");
        }
        
        if(q_search == quest_name) //If quest was assigned
        {
            var i_runs = 0;
            var i_search = "";                                  //Look for quest item
            while(i_search != quest_item_name &amp;&amp; i_runs &lt; 25)   //Runs = 25
            {
                i_search = global.items[i_runs,0];
                i_runs += 1;
                show_debug_message("Search inventory run " + string(i_search) + ".");
            }
            
            if(i_search == quest_item_name)  //If quest is fulfilled
            {
                with(instance_create(200, 520, obj_window_base))  //Create message window
                {
                    //window_message1 = other.quest_success;
                    //window_speaker = other.sprite;
                    
                    event_user(0);
                }
                
                global.msg_case = 5;   //Case = Success
                
                //Give reward
                
                global.items[i_runs,0] = "";    //Delete item out of inventory
                global.items[i_runs,1] = "";
                global.items[i_runs,2] = "";
                global.items[i_runs,3] = "";
                global.items[i_runs,4] = spr_none;
                
                global.quests[q_runs,0] = "";   //Delete quest
                
                global.message1 = "Quest completed: " + quest_name + "."; //Message success
                global.message2 = true;
                      
                hasquest = false;               //No quests anymore
                show_debug_message("Quest " + quest_name + " successful.");
            }
            else
            {
                //Quest uncompleted
                with(instance_create(200, 520, obj_window_base))
                {
                    //window_message1 = other.quest_uncompleted;
                    //window_speaker = other.sprite;
                    
                    event_user(0);
                }
                
                global.msg_case = 4;  //Case uncompleted
                show_debug_message("Quest " + quest_name + " still uncompleted.");
            }
        }
        else
        {
            //Quest will be assigned     
            with(obj_player)
            { 
                inv_quest = 1;
                quest1 = other.quest_name;
                event_user(0);
            }
        }
    }
    else
    {
        //Has no quest
        with(instance_create(200, 520, obj_window_base))
        {
            //window_message1 = other.quest_none;
            //window_speaker = other.sprite;
            
            event_user(0);
        }
        with(obj_player)
        {
            msg_case = 6;   //Case = No quests
        }
        
        show_debug_message("This NPC does not have any quests.");
    }
}
}
}
if(keyboard_check(ord("E")))
{
    var_e_pressed = true;
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Window E press

if(dist &lt; 50)
{
if(hasquest = false)
{
    if(keyboard_check(ord("E")))    //Prepare E press action
    {
        speech_active_counter = 1;
    }
        
    if(speech_active_counter = 1)
    {
    if(keyboard_check_released(ord("E")))   //Launch action when E is released
    {
        speech_active_counter = 0;
        with(obj_player)
        {
            text_loop += 1; //Next part of the conversation
            msg_pony = 1;   //NPC base gives player pony name
            msg_conv = 0;   //NPC base gives player conversation number
            event_user(1);  //Launch of conversation script
        }
    }
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Follow path if available

if(my_path != -1)
{
    dir = point_direction(my_target.x, my_target.y, phy_position_x, phy_position_y);
    dist = point_distance(my_target.x, my_target.y, phy_position_x, phy_position_y);
    
    dx = lengthdir_x(1, dir);
    dy = lengthdir_y(1, dir);
    
    phy_position_x -= dx;
    phy_position_y -= dy;
    
    if(dist &gt; 32)
    {
        phy_position_x = my_target.x;
        phy_position_y = my_target.y;
    }
    
    if(dir &lt; 225 &amp;&amp; dir &lt; 315)
    {
        sprite_index = spr_derpy_left;
    }
    else
    {
        if(dir &lt; 135 &amp;&amp; dir &lt; 225)
        {
            sprite_index = spr_derpy_right;
        }
        else
        {
            if(dir &lt; 45 &amp;&amp; dir &lt; 135)
            {
                sprite_index = spr_derpy_down;
            }
            else
            {
                sprite_index = spr_derpy_up;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_obstacles">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide With
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Quest denial

if(q_target == quest_name)
{
    with(instance_create(200, 520, obj_window_base))  //Window message
    {
        //window_message1 = "Sorry, you already have enough quests.#Come back when you have finished some.";
        //window_speaker = other.sprite;
        
        event_user(0);
    }
    
    global.msg_case = 3;   //Case = Offer denial
    
    global.message1 = "Quest denial: " + quest_name + ".";
    global.message2 = true;
    show_debug_message("Quest " + quest_name + " denied.");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Quest acception

if(q_target == quest_name)
{
    with(instance_create(200, 520, obj_window_base))  //Window message
    {
        //window_message1 = other.quest_start;
        //window_speaker = other.sprite;
        
        event_user(0);
    }
    
    global.msg_case = 2;   //Case = Offer success
    
    global.message1 = "Quest started: " + quest_name + ".";
    global.message2 = true;
    show_debug_message("Quest " + quest_name + " started.");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Path

with(my_target)
{
    path_start(other.my_path, 1, 1, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Physics Debug

physics_draw_debug();
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>24.75,25.75</point>
    <point>18,25</point>
  </PhysicsShapePoints>
</object>
