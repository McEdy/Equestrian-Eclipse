<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

target = noone;         //If no target was set

effect0_counter = 0;    //Seconds of effect 0
effect1_counter = 0;    //Seconds of effect 1
effect2_counter = 0;    //Seconds of effect 2

effect0_length = 5;     //Length of effect 0
effect1_length = 5;     //Length of effect 1
effect2_length = 5;     //Length of effect 2

effect0_damage = 1;     //Damage caused by effect 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Status effect exhausted

if(effect2_counter &lt; effect2_length)
{
    //Count up
    effect2_counter += 1;
    
    //Effect
    with(target)
    {
        //To be added later
        
        with(instance_create(target.x, target.y, obj_damage_popup)) //Damage popup
        {
            damage_popup = "Exhausted";
            character = other.target;
            colour = c_orange;
        }
    }
    
    alarm[2] = 60;                                      //Next second
}
else
{
     with(target)                                       //Restore values
     {
        //To be added later
     }
     instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Status effect slowness

if(effect1_counter &lt; effect1_length)
{
    //Count up
    effect1_counter += 1;
    
    //Effect
    with(target)
    {
        walk_speed = 0.25;
        
        with(instance_create(target.x, target.y, obj_damage_popup)) //Damage popup
        {
            damage_popup = "Slow";
            character = other.target;
            colour = c_orange;
        }
    }
    
    alarm[1] = 60;                                      //Next second
}
else
{
     with(target)                                       //Restore values
     {
        walk_speed = 1;
     }
     instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Status effect burning

if(effect0_counter &lt; effect0_length)
{
    //Count up
    effect0_counter += 1;
    
    //Effect
    with(target)
    {
        hp -= other.effect0_damage;                     //Reduce health
        
        with(instance_create(target.x, target.y, obj_damage_popup)) //Damage popup
        {
            damage_popup = other.effect0_damage;
            character = other.target;
            colour = c_orange;
        }
        
        if(hp &lt;= 0)                                     //Drop items
        {
            event_user(0);
        }
    }
    
    alarm[0] = 60;                                      //Next second
}
else
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
