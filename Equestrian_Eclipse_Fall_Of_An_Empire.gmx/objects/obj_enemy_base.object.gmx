<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_changeling_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Setup

image_speed = 0.1;

phy_fixed_rotation = true;

max_hp = 10;
hp = max_hp;

resistant_burning = false;
resistant_slowness = false;
resistant_exhausted = false;

dir = 0;
walk_speed = 1;                 //Multiplier for speed

l_value = 1;                    //Lowest money drop possible
h_value = 10;                   //Highest money drop possible
money_drop = false;             //If money drop is enabled
item_drop_1 = false;            //Common item drop
item_drop_2 = false;            //Rare item drop

status_effect1 = "";            //Current effect 1
status_effect2 = "";            //Current effect 2
effect1_counter = 0;            //Seconds of effect 1
effect2_counter = 0;            //Seconds of effect 2

effect_burn_length = 5;         //Length of effect burning
effect_slow_length = 5;         //Length of effect 1
effect_exhausted_length = 5;    //Length of effect 2

effect_burn_damage = 1;         //Damage caused by effect burn
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Status effect 2

switch(status_effect2)
{
    case "burning": //Status effect burning
    if(effect2_counter &lt; effect_burn_length)
    {
        //Count up
        effect2_counter += 1;
        
        //Effect
        with(instance_create(x, y, obj_damage_popup))   //Damage popup
        {
            damage_popup = other.effect_burn_damage;
            character = other.id;
            colour = c_orange;
        }
        
        hp -= other.effect_burn_damage;                 //Reduce health
        
        if(hp &lt;= 0)                                     //Drop items
        {
            event_user(0);
        }
        
        alarm[3] = 60;                                  //Next second
    }
    else
    {
        status_effect1 = "";                            //Reset values
        effect1_counter = 0;
    }
    break;
    
    case "slowness": //Status effect slowness
    if(effect2_counter &lt; effect_slow_length)
    {
        //Count up
        effect2_counter += 1;
        
        //Effect
        with(instance_create(x, y, obj_damage_popup))   //Damage popup
        {
            damage_popup = "Slow";
            character = other.id;
            colour = c_orange;
        }
        
        walk_speed = 0.25;                              //One forth speed
        
        alarm[3] = 60;                                  //Next second
    }
    else
    {
        walk_speed = 1;                                 //Reset
        status_effect1 = "";
        effect1_counter = 0;
    }
    break;
    
    case "exhausted":  //Status effect exhausted
    if(effect2_counter &lt; effect_exhausted_length)
    {
        //Count up
        effect2_counter += 1;
        
        //Effect
        with(instance_create(x, y, obj_damage_popup))   //Damage popup
        {
            damage_popup = "Exhausted";
            character = other.id;
            colour = c_orange;
        }
        
        //To be added                                   //Keep stamina low
        
        alarm[3] = 60;                                  //Next second
    }
    else
    {
        //To be added                                   //Reset values
        status_effect1 = "";
        effect1_counter = 0;
    }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Status effect 1

switch(status_effect1)
{
    case "burning": //Status effect burning
    if(resistant_burning == false)
    {
        if(effect1_counter &lt; effect_burn_length)
        {
            //Count up
            effect1_counter += 1;
            
            //Effect
            with(instance_create(x, y, obj_damage_popup))   //Damage popup
            {
                damage_popup = other.effect_burn_damage;
                character = other.id;
                colour = c_orange;
            }
            
            hp -= other.effect_burn_damage;                 //Reduce health
            
            if(hp &lt;= 0)                                     //Drop items
            {
                event_user(0);
            }
            
            alarm[2] = 60;                                  //Next second
        }
        else
        {
            status_effect1 = "";                            //Reset values
            effect1_counter = 0;
        }
    }
    else                                                    //Fire resistance
    {
        with(instance_create(x, y, obj_damage_popup))       //Damage popup
        {
            damage_popup = "Resistant";
            character = other.id;
            colour = c_orange;
        }
    }
    break;
    
    case "slowness": //Status effect slowness
    if(resistant_slowness == false)
    {
        if(effect1_counter &lt; effect_slow_length)
        {
            //Count up
            effect1_counter += 1;
            
            //Effect
            with(instance_create(x, y, obj_damage_popup))   //Damage popup
            {
                damage_popup = "Slow";
                character = other.id;
                colour = c_orange;
            }
            
            walk_speed = 0.25;                              //One forth speed
            
            alarm[2] = 60;                                  //Next second
        }
        else
        {
            walk_speed = 1;                                 //Reset values
            status_effect1 = "";
            effect1_counter = 0;
        }
    }
    else                                                    //Slowness resistance
    {
        with(instance_create(x, y, obj_damage_popup))       //Damage popup
        {
            damage_popup = "Resistant";
            character = other.id;
            colour = c_orange;
        }
    }
    break;
    
    case "exhausted":  //Status effect exhausted
    if(resistant_exhausted == false)
    {
        if(effect1_counter &lt; effect_exhausted_length)
        {
            //Count up
            effect1_counter += 1;
            
            //Effect
            with(instance_create(x, y, obj_damage_popup))   //Damage popup
            {
                damage_popup = "Exhausted";
                character = other.id;
                colour = c_orange;
            }
            
            //To be added                                   //Keep stamina low
            
            alarm[2] = 60;                                  //Next second
        }
        else
        {
            //To be added                                   //Reset values
            status_effect1 = "";
            effect1_counter = 0;
        }
    }
    else                                                    //Exhaustion resistance
    {
        with(instance_create(x, y, obj_damage_popup))       //Damage popup
        {
            damage_popup = "Resistant";
            character = other.id;
            colour = c_orange;
        }
    }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_collission">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide with
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide with
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_obstacles">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collide with
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle drops

//Money drop
money_drop_c = irandom_range(1, 2);             //Roll money drop chance
show_debug_message("Random number: " + string(money_drop_c));

if(money_drop = true)
{
    if(money_drop_c = 1)                        //50% chance of money drop
    {
        with(instance_create(x + irandom_range(-8, 8), y + irandom_range(-8, 8), obj_coinbag))
        {
            value = irandom_range(other.l_value, other.h_value);
        }
    }
}

//Item drop
item_drop_c = irandom_range(1, 2);              //Roll item drop chance
show_debug_message("Random number: " + string(item_drop_c));

if(item_drop_c = 1)                             //50% chance of item drop
{
    if(item_drop_1 != false)                    //If drop exists
    {
        item_drop_tc = irandom_range(1, 100);   //Roll second item drop chance
        
        if(item_drop_tc &lt;=90)                   //90% chance drop (common drop)
        {
            instance_create(x + irandom_range(-8, 8), y + irandom_range(-8, 8), item_drop_1)
        }
        else                                    //10% chance drop (rare drop)
        {
            if(item_drop_2 != false)            //If drop exists
            {
                instance_create(x + irandom_range(-8, 8), y + irandom_range(-8, 8), item_drop_2)
            }
        }
    }
}

//Destroy self
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Show graphical infos

draw_self();

//"Active" or "not active" circle
if(player_dist &lt; vision_r)
{
    draw_circle_colour(x, y, vision_r, c_red, c_red, 1);
}
else
{
    draw_circle_colour(x, y, vision_r, c_green, c_green, 1);
}

///Heath bar
draw_healthbar(x -10, y -30, x +10, y - 25, hp/max_hp *100, c_black, c_red, c_red, 0, true, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>9001</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>25,25</point>
    <point>17,25</point>
  </PhysicsShapePoints>
</object>
