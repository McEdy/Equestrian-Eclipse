{\rtf1\ansi\ansicpg1252\deff0\deflang1031{\fonttbl{\f0\fnil\fcharset0 Arial;}}
{\colortbl ;\red221\green221\blue221;}
\viewkind4\uc1\pard\cf1\fs24 Equestrian Eclipse - Fall of an Empire\par
\par
\par
An adventure-role playing game by Cobalt Shade and McEdy\par
\par
[Insert Description]\par
\par
\par
\par
Code rules for developers: [READ!]\par
\par
I provide you herewith a description of the structure that has to be used for the code. I do that because it helps to keep the code equal and simple, for everybody to understand.\par
If you are working on the game you have to agree to these rules.\par
------------------------------------------------------------------------------------------------------------\par
\par
Right\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab Wrong\tab\tab\tab\tab\tab Wrong aswell\par
\par
if(var1 == 1)\tab\tab\tab\tab\tab\tab\tab\tab\tab if(var1==1)\{\tab\tab\tab\tab if(var1==1)\{execution\}else\{execution\}\par
\{\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab execution\}\par
\tab execution\tab\tab\tab\tab\tab\tab\tab\tab\tab else\{\par
\}\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab execution\par
else\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par
\{\tab\tab\tab\tab\tab\par
\tab execution\par
\}\par
\par
\par
R1 :Use a proper layout for your code as shown above. Every other form apart from the right one is just distracting, so avoid them.\par
The "else" is on the same height as the "if". Executions have to have minus one layer than the last bracket (you press TAB). Also avoid empty lines in the loops.\par
------------------------------------------------------------------------------------------------------------\par
\par
var1=1;\tab\tab\tab\tab\tab\tab\tab\tab\tab var1=1\par
\par
\par
R2: Use semicolons. They keep the code clear.\par
------------------------------------------------------------------------------------------------------------\par
\par
execution\tab\tab\tab\tab\tab\tab\tab\tab\tab execution\par
\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if(var2 == 0)\par
if(var2 == 0)\tab\tab\tab\tab\tab\tab\tab\tab\tab\{\par
\{\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab execution\par
\tab execution\tab\tab\tab\tab\tab\tab\tab\tab\}\par
\}\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab execution\par
\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab execution\par
execution\par
execution\par
\par
\par
R3: Make a space between a loop and a normal execution. You are also free to create "blocks" of executions if you have many to keep the overview.\par
------------------------------------------------------------------------------------------------------------\par
\par
if(var1 == 1)\tab\tab\tab\tab\tab\tab\tab\tab\tab if(var1 == 1)\par
\{\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\{\par
\tab if(var2 == 0)\par
\tab\{\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab if(var2 == 0)\par
\tab\tab execution\tab\tab\tab\tab\tab\tab\tab\tab\{\par
\tab\}\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab execution\par
\}\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par
\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par
\par
R4: If you have an if loop inside an if loop then don't make a space between the \{ and the loop. If you are using the double loop because of R10 then you can proceed with the instructions from R10.\par
------------------------------------------------------------------------------------------------------------\par
\par
if(var1 == 1)\tab\tab\tab\tab\tab\tab\tab\tab\tab if(var1==1)\tab\tab\tab\tab if(var1==1)\{execution\}else\{\}\par
\{\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\{\par
\tab execution\tab\tab\tab\tab\tab\tab\tab\tab\tab execution\par
\}\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\tab\par
\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab else\par
\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\{\}\par
\par
R5: If you have an if loop without any execution in the else part leave the else part out.\par
------------------------------------------------------------------------------------------------------------\par
\par
obj_testobject\tab\tab\tab\tab\tab\tab\tab\tab object_test_object\tab\tab\tab instance_test_object\par
spr_testsprite\tab\tab\tab\tab\tab\tab\tab\tab\tab sprite_test_sprite\tab\tab\tab graphic_test_sprite\par
rm_testroom\tab\tab\tab\tab\tab\tab\tab\tab\tab room_test_room\tab\tab\tab stage_test_room\par
font_equestria\tab\tab\tab\tab\tab\tab\tab\tab ft_equestria\tab\tab\tab\tab type_equestria\par
path_test\tab\tab\tab\tab\tab\tab\tab\tab\tab pt_test\tab\tab\tab\tab\tab way_test\par
...\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab ...\tab\tab\tab\tab\tab ...\par
\par
\par
R6.1: Use appropriate names for the object as shown above. Use the abbreviations "obj", "spr" and "rm" and use underscores between the different parts of the name.\par
Avoid: Too many several parts in one name. Different abbreviations, or even different words than the shown ones!\par
Please keep in mind that names HAVE to be with small letters. Just folders can have capital letters in the ways like script names (-> see script names).\par
\par
[abbreviation]_[kind]_[name]_[extra]\par
\par
\par
R6.2: Use this layout for your names. First the abbreviation, afterwards the kind of object (like NPC or quest),\par
then the actual name and last an extra if needed (add here additional information if you have to).\par
------------------------------------------------------------------------------------------------------------\par
\par
///Depth\tab\tab\tab\tab\tab\tab\tab\tab\tab ///depth\tab\tab\tab\tab /// Depth\par
///Animation speed\tab\tab\tab\tab\tab\tab\tab\tab ///animation speed\tab\tab\tab /// Animation speed\par
///Getting of variable\tab\tab\tab\tab\tab\tab\tab\tab ///Getting Of Variable\tab\tab /// Getting of variable\par
\par
\par
R7: Use capital and small letters following the native English writing for /// and //. After the title of the script you have\par
to leave one space in before the first execution.\par
------------------------------------------------------------------------------------------------------------\par
\par
/*\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab /*comment\tab\tab\tab\tab /*comment*/\par
comment\tab\tab\tab\tab\tab\tab\tab\tab\tab */\par
*/\par
\par
\par
R8: Use the "/*" and "*/" on seperate lines when creating a comment block. This way the comment blocks can be created and deleted very easily.\par
------------------------------------------------------------------------------------------------------------\par
\par
x +10\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab x + 10\tab\tab\tab\tab\tab x+10\par
x *10\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab x * 10\tab\tab\tab\tab\tab x*10\par
x -= 1\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab x -=1\tab\tab\tab\tab\tab x-=1\par
x >= 1\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab x >=1\tab\tab\tab\tab\tab x>=1\par
\par
\par
R9: Use the same layout for mathematical terms as shown above. Operations have one space before them and no space behind. Comparative terms or writing terms like "x = 1" and "x >= 1" have one space before and one space behind them. Reading the code is much easier if you are familiar with the layout and if it is used in the whole code.\par
------------------------------------------------------------------------------------------------------------\par
\par
if(x == 1)\tab\tab\tab\tab\tab\tab\tab\tab\tab if(x == 1 && y == 2)\par
\{\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\{\par
if(y == 2)\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab execution\par
\{\tab\tab\tab\tab\tab\tab\tab\tab\tab\tab\}\par
\tab execution\par
\}\par
\}\par
\par
R10: Use 2 seperate if loops instead of one with 2 conditions. Game Maker will check ALL conditions so you save time when using multiple loops. If you have an else execution the code might not work with multiple loops. You are allowed to use one if loop with multiple conditions in that case.\par
------------------------------------------------------------------------------------------------------------\par
\par
\par
\par
\par
\'a9 Cobalt Shade and McEdy, October 2014\par
Cobalt Studios\par
}
 